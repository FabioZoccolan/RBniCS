name: RBniCS CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 2 * * MON"

jobs:
  test:
    if: "!(contains(github.event.head_commit.message, '[ci skip]') || contains(github.event.head_commit.message, '[skip ci]'))"
    runs-on: ubuntu-latest
    container: quay.io/fenicsproject/dev
    steps:
      - uses: actions/checkout@v2
      - name: Install RBniCS dependencies
        run: pip3 -q install --upgrade cvxopt multipledispatch pylru pytest pytest-benchmark pytest-dependency pytest-flake8 pytest-gc pytest-html pytest-instafail pytest-xdist sympy toposort
      - name: Install RBniCS
        run: |
          python3 setup.py -q install
          python3 -c "import dolfin; import rbnics"
      - name: Run flake8 checks
        run: |
          pytest --flake8 -m flake8 rbnics
          pytest --flake8 -m flake8 tests
          pytest --flake8 -m flake8 tutorials
      - name: Run unit tests (serial)
        run: pytest -n auto -k "not test_time_stepping and not test_pull_back_to_reference_domain and not test_reduced_mesh and not test_tensor" tests/unit
      - name: Run unit tests (parallel)
        run: mpirun -n 2 pytest --gc-disable --gc-scope function -k "not test_time_stepping and not test_pull_back_to_reference_domain and not test_reduced_mesh and not test_tensor and not test_config and not test_function_extend_or_restrict" tests/unit

  docker:
    if: github.repository == 'RBniCS/RBniCS'
    runs-on: ubuntu-latest
    needs: [test]
    env:
      RELEASE_IMAGE: ${{ secrets.CI_REGISTRY_IMAGE }}:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the docker release image
        run: docker build --pull -t ${RELEASE_IMAGE} -f docker/Dockerfile .
      - name: Log into the docker registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }} ${{ secrets.CI_REGISTRY }}
      - name: Push to the docker registry
        run: docker push ${RELEASE_IMAGE}
